---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: notifications-floorist
objects:
- apiVersion: metrics.console.redhat.com/v1alpha1
  kind: FloorPlan
  metadata:
    name: notifications
  spec:
    database:
      secretName: ${FLOORIST_DB_SECRET_NAME}
    objectStore:
      secretName: ${FLOORIST_BUCKET_SECRET_NAME}
    suspend: ${{FLOORIST_SUSPEND}}
    queries:
      # Count the number of behavior groups associated to event types per
      # organization, and also show the bundle and the application they are
      # associated to.
      - prefix: insights/notifications/behavior_groups_event_types_org_id
        query: >-
          SELECT
            bun.display_name::TEXT AS bundle,
            apps.display_name::TEXT AS application,
            et.display_name::TEXT AS event_type,
            bg.org_id::TEXT,
            EXISTS (
              SELECT
                1
              FROM
                behavior_group_action AS bga
              WHERE
                bga.behavior_group_id = etb.behavior_group_id
            )::BOOLEAN AS actively_used,
            count(bg.*)::INTEGER AS "count"
          FROM
            event_type_behavior AS etb
          INNER JOIN
            event_type AS et
              ON et.id = etb.event_type_id
          INNER JOIN
            applications AS apps
              ON apps.id = et.application_id
          INNER JOIN
            behavior_group AS bg
              ON bg.id = etb.behavior_group_id
          INNER JOIN
            bundles AS bun
              ON bun.id = bg.bundle_id
          WHERE
              bg.org_id NOT IN (${FLOORIST_INTERNAL_ORG_IDS_FILTER})
          GROUP BY
            bun.display_name,
            apps.display_name,
            et.display_name,
            bg.org_id,
            actively_used
      # Count the number of created endpoints per endpoint type. Raw total, which
      # includes the disabled ones or the ones not assigned in a behavior group.
      - prefix: insights/notifications/endpoint_types
        query: >-
          SELECT
            sub.endpoint_type::TEXT,
            sub.enabled::BOOLEAN,
            sub.actively_used::BOOLEAN,
            COUNT(*)::INTEGER AS "count"
          FROM
            (
              SELECT
              -- When the endpoint is a Camel endpoint, get its subtype instead.
              CASE
                WHEN
                  e.endpoint_type_v2 = 'CAMEL'
                THEN
                  LOWER(e.endpoint_sub_type)
                ELSE
                  LOWER(e.endpoint_type_v2)
              END AS endpoint_type,
              e.enabled AS enabled,
              -- If the endpoint has an associated event type and a behavior
              -- group, then that means that it is actively being used.
              EXISTS (
                SELECT
                  1
                FROM
                  behavior_group_action AS bga
                INNER JOIN
                  event_type_behavior AS etb ON etb.behavior_group_id = bga.behavior_group_id
                WHERE
                  bga.endpoint_id = e.id
                ) AS actively_used
              FROM
                endpoints AS e
              WHERE
                e.org_id NOT IN (${FLOORIST_INTERNAL_ORG_IDS_FILTER})
            ) AS sub
          GROUP BY
            sub.endpoint_type,
            sub.enabled,
            sub.actively_used;
      - prefix: insights/notifications/endpoint_types_by_org_id
        query: >-
          SELECT
            sub.org_id::TEXT,
            sub.endpoint_type::TEXT,
            sub.enabled::BOOLEAN,
            sub.actively_used::BOOLEAN,
            COUNT(*)::INTEGER AS "count"
          FROM
            (
              SELECT
              CASE
                WHEN
                  e.endpoint_type_v2 = 'CAMEL'
                THEN
                  LOWER(e.endpoint_sub_type)
                ELSE
                  LOWER(e.endpoint_type_v2)
              END AS endpoint_type,
              e.org_id,
              e.enabled AS enabled,
              EXISTS (
                SELECT
                  1
                FROM
                  behavior_group_action AS bga
                INNER JOIN
                  event_type_behavior AS etb ON etb.behavior_group_id = bga.behavior_group_id
                WHERE
                  bga.endpoint_id = e.id
                ) AS actively_used
              FROM
                endpoints AS e
              WHERE
                e.org_id NOT IN (${FLOORIST_INTERNAL_ORG_IDS_FILTER})
            ) AS sub
          GROUP BY
            sub.endpoint_type,
            sub.org_id,
            sub.enabled,
            sub.actively_used;
        # Count the number of email subscriptions, and group them by application
        # and subscription type.
      - prefix: insights/notifications/email_subscriptions
        query: >-
          SELECT
            b.display_name::TEXT AS bundle,
            a.display_name::TEXT AS application,
            et.display_name::TEXT AS event_type,
            es.subscription_type::TEXT AS subscription_type,
            COUNT(es.*)::INTEGER AS "count"
          FROM
            email_subscriptions AS es
          INNER JOIN
            event_type AS et ON et.id = es.event_type_id
          INNER JOIN
            applications AS a ON a.id = et.application_id
          INNER JOIN
            bundles AS b ON b.id = a.bundle_id
          WHERE
            es.org_id NOT IN (${FLOORIST_INTERNAL_ORG_IDS_FILTER})
          GROUP BY
            b.display_name,
            a.display_name,
            et.display_name,
            es.subscription_type;
parameters:
- name: FLOORIST_BUCKET_SECRET_NAME
  description: Floorist's S3 bucket's secret name
  required: true
  value: dummy-secret
- name: FLOORIST_DB_SECRET_NAME
  description: The database's secret name specification for the Floorist operator.
  value: notifications-backend-db
- name: FLOORIST_INTERNAL_ORG_IDS_FILTER
  description: A list of comma separated ORG IDs to filter from the queries, in order to avoid yielding results that include internal accounts.
  value: "'12345', '67890'"
- name: FLOORIST_LOGLEVEL
  description: Floorist loglevel config
  value: 'INFO'
- name: FLOORIST_SUSPEND
  description: Disable Floorist cronjob execution
  required: true
  value: 'true'
